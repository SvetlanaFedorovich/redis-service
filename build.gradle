plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.protobuf' version '0.9.4'
    id 'java-library'
//    id 'checkstyle'
}
ext {
    versions = [
            lombok: "1.18.30",
            grpc: "1.61.1",
            protobuf: "3.25.3",
            junit: "5.10.2",
            testcontainer:"1.19.6",
            redisContainer: "1.6.4",
            redis: "3.2.3",
            jedis: "5.1.1",
            grpcServer: "2.15.0.RELEASE"
    ]
}
//checkstyle {
//    toolVersion '7.8.1'
//    configFile file("checkstyle.xml")
//}

group = 'mvp.project'
version = '1.0.1'


java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation ("org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-redis:$versions.redis",
            "redis.clients:jedis:$versions.jedis",
            "javax.annotation:javax.annotation-api:1.3.2",
            "com.google.protobuf:protobuf-java:$versions.protobuf",
            "net.devh:grpc-server-spring-boot-starter:$versions.grpcServer",
            "net.devh:grpc-server-spring-boot-autoconfigure:$versions.grpcServer")
    compileOnly "org.projectlombok:lombok:$versions.lombok"
    annotationProcessor "org.projectlombok:lombok:$versions.lombok"

    testImplementation ("org.springframework.boot:spring-boot-starter-test",
            "org.junit.jupiter:junit-jupiter-api:$versions.junit",
            "org.testcontainers:junit-jupiter:$versions.testcontainer",
            "com.redis.testcontainers:testcontainers-redis:$versions.redisContainer")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "mvp/project/redisservice/builder/**",
                    "mvp/project/redisservice/model/response/**",
                    "mvp/project/redisservice/RedisServiceApplication.class"
            ])
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.61.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }
    }
}

